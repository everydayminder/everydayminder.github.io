I"e<p>Tomcat Web Application을 모니터링하거나, profiiling하기 위한 괜찮은 툴을 소개한다.
Javamelody(https://code.google.com/p/javamelody)를 설정하는 방법은 무척 간단하다.</p>

<p><strong>1. Jar 설정</strong>
WEB-INF/lib 내 javamedloy.zip내의 javamelody.jar와 jrobin-x.jar를 복사한다.
내 경우는 maven 을 사용하므로, 기존의 pom.xml에 다음과 같이 dependency를 추가하였다.</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nt">&lt;dependency&gt;</span>
 <span class="nt">&lt;groupId&gt;</span>net.bull.javamelody<span class="nt">&lt;/groupId&gt;</span>
 <span class="nt">&lt;artifactId&gt;</span>javamelody-core<span class="nt">&lt;/artifactId&gt;</span>
 <span class="nt">&lt;version&gt;</span>1.43.0<span class="nt">&lt;/version&gt;</span>
 <span class="nt">&lt;/dependency&gt;</span>
</code></pre></div></div>

<p><strong>2. web.xml 설정</strong>
기존에 실행하던 웹 애플리케이션을 모니터링/분석해야 하므로, web.xml의 내용을 편집한다.
보통 web.xml에서는 선언된 순서로 우선순위를 지니므로, 다른 서블릿 선언보다 위쪽에 다음의
설정을 추가로 기록한다.</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nt">&lt;filter&gt;</span>
 <span class="nt">&lt;filter-name&gt;</span>monitoring<span class="nt">&lt;/filter-name&gt;</span>
 <span class="nt">&lt;filter-class&gt;</span>net.bull.javamelody.MonitoringFilter<span class="nt">&lt;/filter-class&gt;</span>
 <span class="nt">&lt;/filter&gt;</span>
 <span class="nt">&lt;filter-mapping&gt;</span>
 <span class="nt">&lt;filter-name&gt;</span>monitoring<span class="nt">&lt;/filter-name&gt;</span>
 <span class="nt">&lt;url-pattern&gt;</span>/*<span class="nt">&lt;/url-pattern&gt;</span>
 <span class="nt">&lt;/filter-mapping&gt;</span>
 <span class="nt">&lt;listener&gt;</span>
 <span class="nt">&lt;listener-class&gt;</span>net.bull.javamelody.SessionListener<span class="nt">&lt;/listener-class&gt;</span>
 <span class="nt">&lt;/listener&gt;</span>
</code></pre></div></div>

<p><strong>3. 동작 확인</strong>
기본 설정은 이것으로 일단 끝!
이제 web application을 실행시키자.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> http://&lt;host&gt;/&lt;context&gt;/monitoring
</code></pre></div></div>
<p>과 같이 실행시키면, 기존 사이트에 대한 모니터링 페이지가 정상 적으로 보일 것이다.
대략 다음과 같은 화면이 뜬다.</p>

<p><a title="JavaMelody 모니터링 화면 참고" href="http://http://javamelody.googlecode.com/svn/trunk/javamelody-core/src/site/resources/screenshots/graphs.png">http://javamelody.googlecode.com/svn/trunk/javamelody-core/src/site/resources/screenshots/graphs.png</a></p>

<p><strong>4. 보안설정(ID/Password 기반)</strong>
role 기반으로 간략하게 보안 설정을 해보자. web.xml에 다음의 내용을 추가한다.</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nt">&lt;login-config&gt;</span>
 <span class="nt">&lt;auth-method&gt;</span>BASIC<span class="nt">&lt;/auth-method&gt;</span>
 <span class="nt">&lt;realm-name&gt;</span>Monitoring<span class="nt">&lt;/realm-name&gt;</span>
 <span class="nt">&lt;/login-config&gt;</span>

<span class="nt">&lt;security-role&gt;</span>
 <span class="nt">&lt;role-name&gt;</span>monitoring<span class="nt">&lt;/role-name&gt;</span>
 <span class="nt">&lt;/security-role&gt;</span>

<span class="nt">&lt;security-constraint&gt;</span>
 <span class="nt">&lt;web-resource-collection&gt;</span>
 <span class="nt">&lt;web-resource-name&gt;</span>Monitoring<span class="nt">&lt;/web-resource-name&gt;</span>
 <span class="nt">&lt;url-pattern&gt;</span>/monitoring<span class="nt">&lt;/url-pattern&gt;</span>
 <span class="nt">&lt;/web-resource-collection&gt;</span>
 <span class="nt">&lt;auth-constraint&gt;</span>
 <span class="nt">&lt;role-name&gt;</span>monitoring<span class="nt">&lt;/role-name&gt;</span>
 <span class="nt">&lt;/auth-constraint&gt;</span>
 <span class="nt">&lt;/security-constraint&gt;</span>
</code></pre></div></div>

<p>만약, 이대로 tomcat을 restart하고, /monitoring으로 접근한다면, HTTP BASIC Authentication으로 인증 요청을 할 것이다.</p>

<p><strong>5. tomcat-user 추가</strong>
위의 인증창에 접근할 수 있는 사용자를 추가하자.
tomcat-users.xml을 찾아 다음과 같이 사용자 정보를 추가한다.</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nt">&lt;tomcat-users&gt;</span>
 ..
 <span class="nt">&lt;role</span> <span class="na">rolename=</span><span class="s">"monitoring"</span><span class="nt">/&gt;</span>
 <span class="nt">&lt;user</span> <span class="na">username=</span><span class="s">"monitoring"</span> <span class="na">password=</span><span class="s">"monitoring"</span> <span class="na">roles=</span><span class="s">"monitoring"</span> <span class="nt">/&gt;</span>
 ..
 <span class="nt">&lt;/tomcat-users&gt;</span>
</code></pre></div></div>

<p>이제 Tomcat을 재시작하고, BASIC authentication popup window가 뜨면, 위의 정보로 인증하고, 처음에 본 모니터링 페이지가 정상적으로 뜨는지 확인한다.</p>
:ET